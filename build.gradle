apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

repositories {
	mavenCentral()

	maven {
		// for jasper reports
		url 'https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/'
	}

	maven {
		// for aws-request-signing-apache-interceptor
		url 'https://jitpack.io'
	}

	maven {
		url iPLAssMavenRepoUrl
		if (iPLAssMavenRepoUsername?.trim()) {
			credentials {
				username iPLAssMavenRepoUsername
				password iPLAssMavenRepoPassword
			}
		}
	}
}

dependencies {
	implementation platform("org.iplass.ee:iplass-ee-bom:${iPLAssVersion}")

	implementation 'org.iplass.ee:iplass-ee-core'
	implementation 'org.iplass.ee:iplass-ee-gem'
	implementation 'org.iplass.ee:iplass-ee-web'

	runtimeOnly 'org.iplass.ee:iplass-ee-admin'
	runtimeOnly 'org.iplass.ee:iplass-ee-appconsole'
	runtimeOnly 'org.iplass.ee:iplass-ee-tools'

	providedRuntime group: 'org.iplass.ee', name: 'iplass-ee-tools-batch', version: iPLAssVersion, transitive: false

	// AWSを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-aws'

	// Infinispanを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-infinispan'

	// Redisを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-redis'

	// GoogleCloudを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-googlecloud'
	
	// SendGridを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-sendgrid'

	// Apache Solrを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-solr'

	// Twilioを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-twilio'

	// WAMを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-wam'

	// Micrometerを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-micrometer'

	// Elasticsearchを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass.ee:iplass-ee-elasticsearch'

	// MDCを利用する場合は以下のコメントアウトを外してください。
//	implementation 'org.iplass.ee:iplass-ee-mdc'
//	runtimeOnly 'org.iplass.ee:iplass-ee-admin-mdc'

	//provided JakartaEE8 apis
	//Servlet
	providedCompile 'jakarta.servlet:jakarta.servlet-api:4.0.4'
	//JSP
	compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:2.3.6'
	//Expression Language
	compileOnly 'jakarta.el:jakarta.el-api:3.0.3'
	//jstl
	compileOnly 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:1.2.7'
	//for jstl tld file resolve
	compileOnly group: 'org.glassfish.web', name: 'jakarta.servlet.jsp.jstl', version: '1.2.6', transitive : false
	//JAX-RS
	compileOnly 'jakarta.ws.rs:jakarta.ws.rs-api:2.1.6'
	//Common Annotations for the Java Platform
	compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
	//java mail
	compileOnly 'jakarta.mail:jakarta.mail-api:1.6.5'
	//Bean validation
	compileOnly group: 'jakarta.validation', name: 'jakarta.validation-api', version: '2.0.2'

	//javax activation for java11
	compileOnly group: 'jakarta.activation', name: 'jakarta.activation-api', version: '1.2.2'

	//JAXB for java11
	compileOnly group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3'

	//if your app server is tomcat 9.0, use this
	//jstl runtime
	runtimeOnly group: 'org.glassfish.web', name: 'jakarta.servlet.jsp.jstl', version: '1.2.6'

	//java mail runtime
	runtimeOnly group: 'com.sun.mail', name: 'jakarta.mail', version: '1.6.5'

	//Bean validation runtime
	runtimeOnly group: 'jakarta.validation', name: 'jakarta.validation-api', version: '2.0.2'
	runtimeOnly group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.5.Final'
	runtimeOnly group: 'org.glassfish', name: 'jakarta.el', version: '3.0.3'

	//JAX-RS runtime
	runtimeOnly platform('org.glassfish.jersey:jersey-bom:2.31')
	runtimeOnly 'org.glassfish.jersey.containers:jersey-container-servlet'
	runtimeOnly 'org.glassfish.jersey.media:jersey-media-json-jackson'
	runtimeOnly 'org.glassfish.jersey.media:jersey-media-multipart'
	runtimeOnly 'org.glassfish.jersey.inject:jersey-hk2'
	runtimeOnly 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider'

	//JAX-WS runtime if use SOAP/WSDL
	//	runtimeOnly('org.glassfish.metro:webservices-tools:2.4.8') {
	//		exclude(group: 'javax.annotation', module: 'javax.annotation-api')
	//	}
	//	runtimeOnly 'org.glassfish.metro:webservices-extra-api:2.4.8'
	//	runtimeOnly('org.glassfish.metro:webservices-extra:2.4.8') {
	//		exclude(group: 'com.sun.commons', module: 'beanutils')
	//		exclude(group: 'com.sun.commons', module: 'modeler')
	//		exclude(group: 'com.sun.commons', module: 'logging-api')
	//	}

	//JAXB runtime for java11
	runtimeOnly group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3'
	runtimeOnly group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.3'

	//JAF runtime for java11
	runtimeOnly group: 'com.sun.activation', name: 'jakarta.activation', version: '1.2.2'

	testImplementation 'junit:junit:4.12'

	testImplementation 'org.iplass.ee:iplass-ee-test'

	// 以下のJDBCドライバはテナント作成ツール(runTenantBatchタスク)の実行に必要となります。
	// 実行する場合は使用するJDBCドライバのコメントアウトを外してください。
	// OracleのJDBCドライバについては'lib/jdbc'に配置してください。
//	providedRuntime 'mysql:mysql-connector-java:8.0.21'
//	providedRuntime 'org.postgresql:postgresql:42.2.16'
//	providedRuntime 'com.microsoft.sqlserver:mssql-jdbc:8.2.2.jre8'

	providedRuntime fileTree('lib').include('**/*.jar')
}

tasks.withType(AbstractCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(GroovyCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) {
	if (System.getProperty('mtp.config') != null) {
		systemProperty 'mtp.config', System.getProperty('mtp.config')
	}
}

// テナント作成ツール実行
task runTenantBatch(type: JavaExec, group: 'application', description : 'execute tenant batch.') {
	mainClass = "org.iplass.mtp.tools.batch.tenant.TenantBatch"
	classpath = sourceSets.main.runtimeClasspath
}

// Entity Java マッピングクラス作成ツール実行
task createEntityClass(type: JavaExec, group: 'application', description : 'create entity java class.') {
	mainClass = "org.iplass.mtp.tools.batch.entity.EntityJavaMappingClassCreator"
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
}

// マージ済service-config表示ツール実行
//   引数：
//     -m [モード]   : モード(PARSE_ONLY:パースのみ、PARSE_LOAD:パース及びサービスのロード)、未指定時はPARSE_ONLY
//     -o [ファイル] : 出力ファイル名、未指定時はコンソール出力
//   実行例１：パースのみ、コンソール出力
//     gradlew viewMergedServiceConfig
//   実行例２：パース及びサービスのロード、'skeleton-service-config.xml'ファイルへ出力
//     gradlew viewMergedServiceConfig --args="-m PARSE_LOAD -o skeleton-service-config.xml"
task viewMergedServiceConfig(type: JavaExec, group: 'application', description : 'view merged service-config.') {
	mainClass = "org.iplass.mtp.tools.batch.config.ServiceConfigViewer"
	classpath = sourceSets.main.runtimeClasspath
}
